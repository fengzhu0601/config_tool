// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: pb_rpc_acc.proto

package pb_rpc_acc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 性别
type Sex int32

const (
	Sex_None  Sex = 0 // 未定义性别
	Sex_Man   Sex = 1 // 男
	Sex_Woman Sex = 2 // 女
)

// Enum value maps for Sex.
var (
	Sex_name = map[int32]string{
		0: "None",
		1: "Man",
		2: "Woman",
	}
	Sex_value = map[string]int32{
		"None":  0,
		"Man":   1,
		"Woman": 2,
	}
)

func (x Sex) Enum() *Sex {
	p := new(Sex)
	*p = x
	return p
}

func (x Sex) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Sex) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_rpc_acc_proto_enumTypes[0].Descriptor()
}

func (Sex) Type() protoreflect.EnumType {
	return &file_pb_rpc_acc_proto_enumTypes[0]
}

func (x Sex) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Sex.Descriptor instead.
func (Sex) EnumDescriptor() ([]byte, []int) {
	return file_pb_rpc_acc_proto_rawDescGZIP(), []int{0}
}

// 角色详细信息
type AccDetail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sid           uint32                 `protobuf:"varint,1,opt,name=Sid,proto3" json:"Sid,omitempty"`                     // 角色ID
	Sdk           uint32                 `protobuf:"varint,2,opt,name=Sdk,proto3" json:"Sdk,omitempty"`                     // sdk_id
	User          string                 `protobuf:"bytes,3,opt,name=User,proto3" json:"User,omitempty"`                    // sdk账号
	Pid           string                 `protobuf:"bytes,4,opt,name=Pid,proto3" json:"Pid,omitempty"`                      // 渠道id
	SerId         uint32                 `protobuf:"varint,5,opt,name=SerId,proto3" json:"SerId,omitempty"`                 // 区服ID
	Nickname      string                 `protobuf:"bytes,6,opt,name=Nickname,proto3" json:"Nickname,omitempty"`            // 昵称
	Level         uint32                 `protobuf:"varint,7,opt,name=Level,proto3" json:"Level,omitempty"`                 // 等级
	CreateTime    uint64                 `protobuf:"varint,8,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`       // 注册时间
	LastLoginTime uint64                 `protobuf:"varint,9,opt,name=LastLoginTime,proto3" json:"LastLoginTime,omitempty"` // 上次登陆时间
	IsMute        bool                   `protobuf:"varint,10,opt,name=IsMute,proto3" json:"IsMute,omitempty"`              // 是否禁言
	IsBlocked     bool                   `protobuf:"varint,11,opt,name=IsBlocked,proto3" json:"IsBlocked,omitempty"`        // 是否封号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccDetail) Reset() {
	*x = AccDetail{}
	mi := &file_pb_rpc_acc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccDetail) ProtoMessage() {}

func (x *AccDetail) ProtoReflect() protoreflect.Message {
	mi := &file_pb_rpc_acc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccDetail.ProtoReflect.Descriptor instead.
func (*AccDetail) Descriptor() ([]byte, []int) {
	return file_pb_rpc_acc_proto_rawDescGZIP(), []int{0}
}

func (x *AccDetail) GetSid() uint32 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *AccDetail) GetSdk() uint32 {
	if x != nil {
		return x.Sdk
	}
	return 0
}

func (x *AccDetail) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *AccDetail) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *AccDetail) GetSerId() uint32 {
	if x != nil {
		return x.SerId
	}
	return 0
}

func (x *AccDetail) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *AccDetail) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *AccDetail) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AccDetail) GetLastLoginTime() uint64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

func (x *AccDetail) GetIsMute() bool {
	if x != nil {
		return x.IsMute
	}
	return false
}

func (x *AccDetail) GetIsBlocked() bool {
	if x != nil {
		return x.IsBlocked
	}
	return false
}

// acc-server:查询sdk账号对应sid
type ReqGetAcc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sdk           uint32                 `protobuf:"varint,1,opt,name=Sdk,proto3" json:"Sdk,omitempty"`        // sdk_id
	User          string                 `protobuf:"bytes,2,opt,name=User,proto3" json:"User,omitempty"`       // sdk账号
	Pid           string                 `protobuf:"bytes,3,opt,name=Pid,proto3" json:"Pid,omitempty"`         // 渠道id
	SerId         uint32                 `protobuf:"varint,4,opt,name=SerId,proto3" json:"SerId,omitempty"`    // 区服ID
	Version       string                 `protobuf:"bytes,5,opt,name=Version,proto3" json:"Version,omitempty"` // 版本号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqGetAcc) Reset() {
	*x = ReqGetAcc{}
	mi := &file_pb_rpc_acc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqGetAcc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetAcc) ProtoMessage() {}

func (x *ReqGetAcc) ProtoReflect() protoreflect.Message {
	mi := &file_pb_rpc_acc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetAcc.ProtoReflect.Descriptor instead.
func (*ReqGetAcc) Descriptor() ([]byte, []int) {
	return file_pb_rpc_acc_proto_rawDescGZIP(), []int{1}
}

func (x *ReqGetAcc) GetSdk() uint32 {
	if x != nil {
		return x.Sdk
	}
	return 0
}

func (x *ReqGetAcc) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ReqGetAcc) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *ReqGetAcc) GetSerId() uint32 {
	if x != nil {
		return x.SerId
	}
	return 0
}

func (x *ReqGetAcc) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// game-server:创建玩家
type ReqCreateAcc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sdk           uint32                 `protobuf:"varint,1,opt,name=Sdk,proto3" json:"Sdk,omitempty"`     // sdk_id
	User          string                 `protobuf:"bytes,2,opt,name=User,proto3" json:"User,omitempty"`    // sdk账号
	Pid           string                 `protobuf:"bytes,3,opt,name=Pid,proto3" json:"Pid,omitempty"`      // 渠道id
	SerId         uint32                 `protobuf:"varint,4,opt,name=SerId,proto3" json:"SerId,omitempty"` // 区服ID
	Sid           uint32                 `protobuf:"varint,5,opt,name=Sid,proto3" json:"Sid,omitempty"`     // 角色ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqCreateAcc) Reset() {
	*x = ReqCreateAcc{}
	mi := &file_pb_rpc_acc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqCreateAcc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateAcc) ProtoMessage() {}

func (x *ReqCreateAcc) ProtoReflect() protoreflect.Message {
	mi := &file_pb_rpc_acc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateAcc.ProtoReflect.Descriptor instead.
func (*ReqCreateAcc) Descriptor() ([]byte, []int) {
	return file_pb_rpc_acc_proto_rawDescGZIP(), []int{2}
}

func (x *ReqCreateAcc) GetSdk() uint32 {
	if x != nil {
		return x.Sdk
	}
	return 0
}

func (x *ReqCreateAcc) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ReqCreateAcc) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *ReqCreateAcc) GetSerId() uint32 {
	if x != nil {
		return x.SerId
	}
	return 0
}

func (x *ReqCreateAcc) GetSid() uint32 {
	if x != nil {
		return x.Sid
	}
	return 0
}

// acc-server:更新玩家数据
type ReqUpdateAcc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sid           uint32                 `protobuf:"varint,1,opt,name=Sid,proto3" json:"Sid,omitempty"`                     // 玩家id
	Nickname      string                 `protobuf:"bytes,2,opt,name=Nickname,proto3" json:"Nickname,omitempty"`            // 昵称
	Sex           Sex                    `protobuf:"varint,3,opt,name=Sex,proto3,enum=pb_rpc_acc.Sex" json:"Sex,omitempty"` // 性别
	Pic           uint32                 `protobuf:"varint,4,opt,name=Pic,proto3" json:"Pic,omitempty"`                     // 头像
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqUpdateAcc) Reset() {
	*x = ReqUpdateAcc{}
	mi := &file_pb_rpc_acc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqUpdateAcc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpdateAcc) ProtoMessage() {}

func (x *ReqUpdateAcc) ProtoReflect() protoreflect.Message {
	mi := &file_pb_rpc_acc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpdateAcc.ProtoReflect.Descriptor instead.
func (*ReqUpdateAcc) Descriptor() ([]byte, []int) {
	return file_pb_rpc_acc_proto_rawDescGZIP(), []int{3}
}

func (x *ReqUpdateAcc) GetSid() uint32 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *ReqUpdateAcc) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ReqUpdateAcc) GetSex() Sex {
	if x != nil {
		return x.Sex
	}
	return Sex_None
}

func (x *ReqUpdateAcc) GetPic() uint32 {
	if x != nil {
		return x.Pic
	}
	return 0
}

// game-server:玩家断开连接
type ReqAccQuick struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sid           uint32                 `protobuf:"varint,1,opt,name=Sid,proto3" json:"Sid,omitempty"` // 角色ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqAccQuick) Reset() {
	*x = ReqAccQuick{}
	mi := &file_pb_rpc_acc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqAccQuick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAccQuick) ProtoMessage() {}

func (x *ReqAccQuick) ProtoReflect() protoreflect.Message {
	mi := &file_pb_rpc_acc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAccQuick.ProtoReflect.Descriptor instead.
func (*ReqAccQuick) Descriptor() ([]byte, []int) {
	return file_pb_rpc_acc_proto_rawDescGZIP(), []int{4}
}

func (x *ReqAccQuick) GetSid() uint32 {
	if x != nil {
		return x.Sid
	}
	return 0
}

// gateway-server:顶号通知
type ReqKickAccNotic struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sid           uint32                 `protobuf:"varint,1,opt,name=Sid,proto3" json:"Sid,omitempty"` // 角色ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqKickAccNotic) Reset() {
	*x = ReqKickAccNotic{}
	mi := &file_pb_rpc_acc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqKickAccNotic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqKickAccNotic) ProtoMessage() {}

func (x *ReqKickAccNotic) ProtoReflect() protoreflect.Message {
	mi := &file_pb_rpc_acc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqKickAccNotic.ProtoReflect.Descriptor instead.
func (*ReqKickAccNotic) Descriptor() ([]byte, []int) {
	return file_pb_rpc_acc_proto_rawDescGZIP(), []int{5}
}

func (x *ReqKickAccNotic) GetSid() uint32 {
	if x != nil {
		return x.Sid
	}
	return 0
}

// acc-server:根据Sid获取角色数据
type ReqGetSidAcc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sid           uint32                 `protobuf:"varint,1,opt,name=Sid,proto3" json:"Sid,omitempty"` // 角色ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqGetSidAcc) Reset() {
	*x = ReqGetSidAcc{}
	mi := &file_pb_rpc_acc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqGetSidAcc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetSidAcc) ProtoMessage() {}

func (x *ReqGetSidAcc) ProtoReflect() protoreflect.Message {
	mi := &file_pb_rpc_acc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetSidAcc.ProtoReflect.Descriptor instead.
func (*ReqGetSidAcc) Descriptor() ([]byte, []int) {
	return file_pb_rpc_acc_proto_rawDescGZIP(), []int{6}
}

func (x *ReqGetSidAcc) GetSid() uint32 {
	if x != nil {
		return x.Sid
	}
	return 0
}

// acc-server:根据user获取角色列表
type ReqGetUserAccList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          string                 `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"` // sdk账号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqGetUserAccList) Reset() {
	*x = ReqGetUserAccList{}
	mi := &file_pb_rpc_acc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqGetUserAccList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetUserAccList) ProtoMessage() {}

func (x *ReqGetUserAccList) ProtoReflect() protoreflect.Message {
	mi := &file_pb_rpc_acc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetUserAccList.ProtoReflect.Descriptor instead.
func (*ReqGetUserAccList) Descriptor() ([]byte, []int) {
	return file_pb_rpc_acc_proto_rawDescGZIP(), []int{7}
}

func (x *ReqGetUserAccList) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

// acc-server:查询sdk账号对应sid
type RepGetAcc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SerId         uint32                 `protobuf:"varint,1,opt,name=SerId,proto3" json:"SerId,omitempty"`       // 区服ID
	Sid           uint32                 `protobuf:"varint,2,opt,name=Sid,proto3" json:"Sid,omitempty"`           // 角色ID
	IsCreate      bool                   `protobuf:"varint,3,opt,name=IsCreate,proto3" json:"IsCreate,omitempty"` // 是否创角
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepGetAcc) Reset() {
	*x = RepGetAcc{}
	mi := &file_pb_rpc_acc_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepGetAcc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepGetAcc) ProtoMessage() {}

func (x *RepGetAcc) ProtoReflect() protoreflect.Message {
	mi := &file_pb_rpc_acc_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepGetAcc.ProtoReflect.Descriptor instead.
func (*RepGetAcc) Descriptor() ([]byte, []int) {
	return file_pb_rpc_acc_proto_rawDescGZIP(), []int{8}
}

func (x *RepGetAcc) GetSerId() uint32 {
	if x != nil {
		return x.SerId
	}
	return 0
}

func (x *RepGetAcc) GetSid() uint32 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *RepGetAcc) GetIsCreate() bool {
	if x != nil {
		return x.IsCreate
	}
	return false
}

// game-server:创建玩家
type RepCreateAcc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sdk           uint32                 `protobuf:"varint,1,opt,name=Sdk,proto3" json:"Sdk,omitempty"`     // sdk_id
	User          string                 `protobuf:"bytes,2,opt,name=User,proto3" json:"User,omitempty"`    // sdk账号
	Pid           string                 `protobuf:"bytes,3,opt,name=Pid,proto3" json:"Pid,omitempty"`      // 渠道id
	SerId         uint32                 `protobuf:"varint,4,opt,name=SerId,proto3" json:"SerId,omitempty"` // 区服ID
	Sid           uint32                 `protobuf:"varint,5,opt,name=Sid,proto3" json:"Sid,omitempty"`     // 角色ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepCreateAcc) Reset() {
	*x = RepCreateAcc{}
	mi := &file_pb_rpc_acc_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepCreateAcc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepCreateAcc) ProtoMessage() {}

func (x *RepCreateAcc) ProtoReflect() protoreflect.Message {
	mi := &file_pb_rpc_acc_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepCreateAcc.ProtoReflect.Descriptor instead.
func (*RepCreateAcc) Descriptor() ([]byte, []int) {
	return file_pb_rpc_acc_proto_rawDescGZIP(), []int{9}
}

func (x *RepCreateAcc) GetSdk() uint32 {
	if x != nil {
		return x.Sdk
	}
	return 0
}

func (x *RepCreateAcc) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *RepCreateAcc) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *RepCreateAcc) GetSerId() uint32 {
	if x != nil {
		return x.SerId
	}
	return 0
}

func (x *RepCreateAcc) GetSid() uint32 {
	if x != nil {
		return x.Sid
	}
	return 0
}

// game-server:玩家断开连接
type RepAccQuick struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sid           uint32                 `protobuf:"varint,1,opt,name=Sid,proto3" json:"Sid,omitempty"` // 角色ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepAccQuick) Reset() {
	*x = RepAccQuick{}
	mi := &file_pb_rpc_acc_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepAccQuick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepAccQuick) ProtoMessage() {}

func (x *RepAccQuick) ProtoReflect() protoreflect.Message {
	mi := &file_pb_rpc_acc_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepAccQuick.ProtoReflect.Descriptor instead.
func (*RepAccQuick) Descriptor() ([]byte, []int) {
	return file_pb_rpc_acc_proto_rawDescGZIP(), []int{10}
}

func (x *RepAccQuick) GetSid() uint32 {
	if x != nil {
		return x.Sid
	}
	return 0
}

// acc-server:根据Sid获取角色数据
type RepGetSidAcc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Acc           []*AccDetail           `protobuf:"bytes,1,rep,name=Acc,proto3" json:"Acc,omitempty"` // 角色信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepGetSidAcc) Reset() {
	*x = RepGetSidAcc{}
	mi := &file_pb_rpc_acc_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepGetSidAcc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepGetSidAcc) ProtoMessage() {}

func (x *RepGetSidAcc) ProtoReflect() protoreflect.Message {
	mi := &file_pb_rpc_acc_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepGetSidAcc.ProtoReflect.Descriptor instead.
func (*RepGetSidAcc) Descriptor() ([]byte, []int) {
	return file_pb_rpc_acc_proto_rawDescGZIP(), []int{11}
}

func (x *RepGetSidAcc) GetAcc() []*AccDetail {
	if x != nil {
		return x.Acc
	}
	return nil
}

// acc-server:根据user获取角色列表
type RepGetUserAccList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Acc           []*AccDetail           `protobuf:"bytes,1,rep,name=Acc,proto3" json:"Acc,omitempty"` // 角色信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepGetUserAccList) Reset() {
	*x = RepGetUserAccList{}
	mi := &file_pb_rpc_acc_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepGetUserAccList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepGetUserAccList) ProtoMessage() {}

func (x *RepGetUserAccList) ProtoReflect() protoreflect.Message {
	mi := &file_pb_rpc_acc_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepGetUserAccList.ProtoReflect.Descriptor instead.
func (*RepGetUserAccList) Descriptor() ([]byte, []int) {
	return file_pb_rpc_acc_proto_rawDescGZIP(), []int{12}
}

func (x *RepGetUserAccList) GetAcc() []*AccDetail {
	if x != nil {
		return x.Acc
	}
	return nil
}

var File_pb_rpc_acc_proto protoreflect.FileDescriptor

const file_pb_rpc_acc_proto_rawDesc = "" +
	"\n" +
	"\x10pb_rpc_acc.proto\x12\n" +
	"pb_rpc_acc\"\x99\x02\n" +
	"\tAccDetail\x12\x10\n" +
	"\x03Sid\x18\x01 \x01(\rR\x03Sid\x12\x10\n" +
	"\x03Sdk\x18\x02 \x01(\rR\x03Sdk\x12\x12\n" +
	"\x04User\x18\x03 \x01(\tR\x04User\x12\x10\n" +
	"\x03Pid\x18\x04 \x01(\tR\x03Pid\x12\x14\n" +
	"\x05SerId\x18\x05 \x01(\rR\x05SerId\x12\x1a\n" +
	"\bNickname\x18\x06 \x01(\tR\bNickname\x12\x14\n" +
	"\x05Level\x18\a \x01(\rR\x05Level\x12\x1e\n" +
	"\n" +
	"CreateTime\x18\b \x01(\x04R\n" +
	"CreateTime\x12$\n" +
	"\rLastLoginTime\x18\t \x01(\x04R\rLastLoginTime\x12\x16\n" +
	"\x06IsMute\x18\n" +
	" \x01(\bR\x06IsMute\x12\x1c\n" +
	"\tIsBlocked\x18\v \x01(\bR\tIsBlocked\"s\n" +
	"\tReqGetAcc\x12\x10\n" +
	"\x03Sdk\x18\x01 \x01(\rR\x03Sdk\x12\x12\n" +
	"\x04User\x18\x02 \x01(\tR\x04User\x12\x10\n" +
	"\x03Pid\x18\x03 \x01(\tR\x03Pid\x12\x14\n" +
	"\x05SerId\x18\x04 \x01(\rR\x05SerId\x12\x18\n" +
	"\aVersion\x18\x05 \x01(\tR\aVersion\"n\n" +
	"\fReqCreateAcc\x12\x10\n" +
	"\x03Sdk\x18\x01 \x01(\rR\x03Sdk\x12\x12\n" +
	"\x04User\x18\x02 \x01(\tR\x04User\x12\x10\n" +
	"\x03Pid\x18\x03 \x01(\tR\x03Pid\x12\x14\n" +
	"\x05SerId\x18\x04 \x01(\rR\x05SerId\x12\x10\n" +
	"\x03Sid\x18\x05 \x01(\rR\x03Sid\"q\n" +
	"\fReqUpdateAcc\x12\x10\n" +
	"\x03Sid\x18\x01 \x01(\rR\x03Sid\x12\x1a\n" +
	"\bNickname\x18\x02 \x01(\tR\bNickname\x12!\n" +
	"\x03Sex\x18\x03 \x01(\x0e2\x0f.pb_rpc_acc.SexR\x03Sex\x12\x10\n" +
	"\x03Pic\x18\x04 \x01(\rR\x03Pic\"\x1f\n" +
	"\vReqAccQuick\x12\x10\n" +
	"\x03Sid\x18\x01 \x01(\rR\x03Sid\"#\n" +
	"\x0fReqKickAccNotic\x12\x10\n" +
	"\x03Sid\x18\x01 \x01(\rR\x03Sid\" \n" +
	"\fReqGetSidAcc\x12\x10\n" +
	"\x03Sid\x18\x01 \x01(\rR\x03Sid\"'\n" +
	"\x11ReqGetUserAccList\x12\x12\n" +
	"\x04User\x18\x01 \x01(\tR\x04User\"O\n" +
	"\tRepGetAcc\x12\x14\n" +
	"\x05SerId\x18\x01 \x01(\rR\x05SerId\x12\x10\n" +
	"\x03Sid\x18\x02 \x01(\rR\x03Sid\x12\x1a\n" +
	"\bIsCreate\x18\x03 \x01(\bR\bIsCreate\"n\n" +
	"\fRepCreateAcc\x12\x10\n" +
	"\x03Sdk\x18\x01 \x01(\rR\x03Sdk\x12\x12\n" +
	"\x04User\x18\x02 \x01(\tR\x04User\x12\x10\n" +
	"\x03Pid\x18\x03 \x01(\tR\x03Pid\x12\x14\n" +
	"\x05SerId\x18\x04 \x01(\rR\x05SerId\x12\x10\n" +
	"\x03Sid\x18\x05 \x01(\rR\x03Sid\"\x1f\n" +
	"\vRepAccQuick\x12\x10\n" +
	"\x03Sid\x18\x01 \x01(\rR\x03Sid\"7\n" +
	"\fRepGetSidAcc\x12'\n" +
	"\x03Acc\x18\x01 \x03(\v2\x15.pb_rpc_acc.AccDetailR\x03Acc\"<\n" +
	"\x11RepGetUserAccList\x12'\n" +
	"\x03Acc\x18\x01 \x03(\v2\x15.pb_rpc_acc.AccDetailR\x03Acc*#\n" +
	"\x03Sex\x12\b\n" +
	"\x04None\x10\x00\x12\a\n" +
	"\x03Man\x10\x01\x12\t\n" +
	"\x05Woman\x10\x02B\x18Z\x16game/pb/rpc/pb_rpc_accb\x06proto3"

var (
	file_pb_rpc_acc_proto_rawDescOnce sync.Once
	file_pb_rpc_acc_proto_rawDescData []byte
)

func file_pb_rpc_acc_proto_rawDescGZIP() []byte {
	file_pb_rpc_acc_proto_rawDescOnce.Do(func() {
		file_pb_rpc_acc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pb_rpc_acc_proto_rawDesc), len(file_pb_rpc_acc_proto_rawDesc)))
	})
	return file_pb_rpc_acc_proto_rawDescData
}

var file_pb_rpc_acc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pb_rpc_acc_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_pb_rpc_acc_proto_goTypes = []any{
	(Sex)(0),                  // 0: pb_rpc_acc.Sex
	(*AccDetail)(nil),         // 1: pb_rpc_acc.AccDetail
	(*ReqGetAcc)(nil),         // 2: pb_rpc_acc.ReqGetAcc
	(*ReqCreateAcc)(nil),      // 3: pb_rpc_acc.ReqCreateAcc
	(*ReqUpdateAcc)(nil),      // 4: pb_rpc_acc.ReqUpdateAcc
	(*ReqAccQuick)(nil),       // 5: pb_rpc_acc.ReqAccQuick
	(*ReqKickAccNotic)(nil),   // 6: pb_rpc_acc.ReqKickAccNotic
	(*ReqGetSidAcc)(nil),      // 7: pb_rpc_acc.ReqGetSidAcc
	(*ReqGetUserAccList)(nil), // 8: pb_rpc_acc.ReqGetUserAccList
	(*RepGetAcc)(nil),         // 9: pb_rpc_acc.RepGetAcc
	(*RepCreateAcc)(nil),      // 10: pb_rpc_acc.RepCreateAcc
	(*RepAccQuick)(nil),       // 11: pb_rpc_acc.RepAccQuick
	(*RepGetSidAcc)(nil),      // 12: pb_rpc_acc.RepGetSidAcc
	(*RepGetUserAccList)(nil), // 13: pb_rpc_acc.RepGetUserAccList
}
var file_pb_rpc_acc_proto_depIdxs = []int32{
	0, // 0: pb_rpc_acc.ReqUpdateAcc.Sex:type_name -> pb_rpc_acc.Sex
	1, // 1: pb_rpc_acc.RepGetSidAcc.Acc:type_name -> pb_rpc_acc.AccDetail
	1, // 2: pb_rpc_acc.RepGetUserAccList.Acc:type_name -> pb_rpc_acc.AccDetail
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pb_rpc_acc_proto_init() }
func file_pb_rpc_acc_proto_init() {
	if File_pb_rpc_acc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pb_rpc_acc_proto_rawDesc), len(file_pb_rpc_acc_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_rpc_acc_proto_goTypes,
		DependencyIndexes: file_pb_rpc_acc_proto_depIdxs,
		EnumInfos:         file_pb_rpc_acc_proto_enumTypes,
		MessageInfos:      file_pb_rpc_acc_proto_msgTypes,
	}.Build()
	File_pb_rpc_acc_proto = out.File
	file_pb_rpc_acc_proto_goTypes = nil
	file_pb_rpc_acc_proto_depIdxs = nil
}
